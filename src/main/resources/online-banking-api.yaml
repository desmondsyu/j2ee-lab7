openapi: 3.0.3
info:
  title: Online Banking API
  description: API for managing users, accounts, transfers.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging.api.example.com/v1
    description: Staging server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: integer
      example:
        message: "Invalid token"
        errorCode: 401
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        role:
          type: string
        createdAt:
          type: string
          format: date-time
      example:
        id: 1
        username: "John Doe"
        email: "john.doe@example.com"
        password: "password"
        role: "admin"
        createdAt: "2021-01-01T00:00:00Z"
    Account:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        accountNumber:
          type: string
        balance:
          type: number
        createdAt:
          type: string
          format: date-time
      example:
        id: 1
        userId: 1
        accountNumber: "123456"
        balance: 1000.00
        createdAt: "2021-01-01T00:00:00Z"
    Transfer:
      type: object
      properties:
        id:
          type: integer
        fromAccount:
          type: string
        toAccount:
          type: string
        currency:
          type: string
        amount:
          type: number
        status:
          type: string
          enum: ["Pending", "Completed", "Failed"]
        createdAt:
          type: string
          format: date-time
      example:
        id: 1
        fromAccount: "123456"
        toAccount: "654321"
        currency: "CAD"
        amount: 100.00
        createdAt: "2021-01-01T00:00:00Z"
paths:
  /auth/login:
    post:
      summary: "Authenticate and generate a JWT token"
      description: "Logs in a user and returns an authentication token."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              username: "john.doe@example.com"
              password: "password"
              required:
                - email
                - password
      responses:
        "200":
          description: "Successful login"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Invalid email or password"
                errorCode: 401
  /auth/logout:
    post:
      summary: "Invalidate the JWT token"
      description: "Logs out a user and invalidates the authentication token."
      responses:
        "200":
          description: "Successful logout"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Successfully logged out"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Invalid token"
                errorCode: 401
  /accounts/{id}:
    get:
      summary: "Get account details"
      description: "Retrieves details of a specific account."
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Successful retrieval"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              example:
                id: 1
                userId: 1
                accountNumber: "123456"
                balance: 1000.00
                createdAt: "2021-01-01T00:00:00Z"
        "404":
          description: "Account not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Account not found"
                errorCode: 404
    put:
      summary: "Update account details"
      description: "Updates details of an account."
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
            example:
              id: 1
              userId: 1
              accountNumber: "123456"
              createdAt: "2021-01-01T00:00:00Z"
      responses:
        "200":
          description: "Successful update"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              example:
                id: 1
                userId: 1
                accountNumber: "123456"
                balance: 1500.00
                createdAt: "2021-01-01T00:00:00Z"
        "404":
          description: "Account not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Account not found"
                errorCode: 404
  /transactions/transfer:
    post:
      summary: "Initiate a fund transfer"
      description: "Initiates a fund transfer between two accounts."
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromAccount:
                  type: string
                toAccount:
                  type: string
                currency:
                  type: string
                amount:
                  type: number
              example:
                fromAccount: "123456"
                toAccount: "654321"
                currency: "CAD"
                amount: 100.00
              required:
                - fromAccount
                - toAccount
                - currency
                - amount
      responses:
        "200":
          description: "Successful transfer"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transfer"
              example:
                id: 1
                fromAccount: "123456"
                toAccount: "654321"
                currency: "CAD"
                amount: 100.00
                status: "Completed"
                createdAt: "2021-01-01T00:00:00Z"
        "400":
          description: "Invalid transfer request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Insufficient balance"
                errorCode: 400
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Invalid token"
                errorCode: 401
        "404":
          description: "Account not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Account not found"
                errorCode: 404
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "An unexpected error occurred"
                errorCode: 500
  /transactions/history:
    get:
      summary: "Get transaction history"
      description: "Retrieves the transaction history of the authenticated user."
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "Successful retrieval"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transfer"
              example:
                - id: 1
                  fromAccount: "123456"
                  toAccount: "654321"
                  currency: "CAD"
                  amount: 100.00
                  status: "Completed"
                  createdAt: "2021-01-01T00:00:00Z"
                - id: 2
                  fromAccount: "654321"
                  toAccount: "123456"
                  currency: "CAD"
                  amount: 50.00
                  status: "Completed"
                  createdAt: "2021-01-02T00:00:00Z"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "Invalid token"
                errorCode: 401
        "404":
          description: "No transactions found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "No transactions found"
                errorCode: 404
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "An unexpected error occurred"
                errorCode: 500
    